#!/bin/bash

display_usage() {
	echo -e "This script extracts a group of sequences from a file by providing the name of the sequences that flank the group of interest in a phylogenetic tree.\n"
	echo -e "Output files are created as \"<seqfile>.excluding\" and \"<seqfile>.only\".\n"
	echo -e "Usages:"
	echo -e "\t1) `basename $0` <name1> <name2> <seqfile> <treefile>"
	echo -e "\t2) `basename $0` <params_file>"
	echo -e "\t3) `basename $0`"
	echo -e "\nWhere <params_file> is a plain-text file with the parameter names (if not provided, as in case 3, it is assumed to be at \"/data/parameters\"):"
	echo -e "\tname1=<name1>"
	echo -e "\tname2=<name2>"
	echo -e "\tseqfile=<seqfile>"
	echo -e "\ttreefile=<treefile>"
}

if [[ $1 == "--help" || $1 == "-h" ]]; then
	display_usage
	exit 1
fi

if [ $# -ne 0 ] && [ $# -ne 1 ] && [ $# -ne 4 ]; then
	tput setaf 1
	echo -e "Error. This script requires zero, one or four arguments\n"
	tput sgr0
	display_usage
	exit 0
fi

if [ $# -eq 1 ] || [ $# -eq 0 ]; then
	PARAMS=${1:-/data/parameters}
    echo "Loading parameters file: ${PARAMS}"
	source ${PARAMS}
else
	name1=$1
	name2=$2
	seqfile=$3
	treefile=$4
fi

if [ -f "$seqfile.only" ]; then
echo "Removing existing file $seqfile.only before writing it again"
	rm -f $seqfile.only
fi

if [ -f "$seqfile.excluding" ]; then
	echo "Removing existing file $seqfile.excluding before writing it again"
	rm -f $seqfile.excluding
fi

TMP_DIR=$(mktemp -d /tmp/get_phylo_taxa.XXXXX)

grep -oh "$name1.*$name2" $treefile > ${TMP_DIR}/tmp1
grep '>' $seqfile | sed 's/>//g; s/\r//g' > ${TMP_DIR}/tmp2
while read name; do
	grep -oh $name ${TMP_DIR}/tmp1 >> ${TMP_DIR}/tmp3
done < ${TMP_DIR}/tmp2

rm ${TMP_DIR}/tmp1 ${TMP_DIR}/tmp2
cp $seqfile ${TMP_DIR}/tmp4

while read name1; do
	grep -A1 "$name1" $seqfile >> $seqfile.only
	sed -i -e "/$name1/,+1d" ${TMP_DIR}/tmp4
done < ${TMP_DIR}/tmp3

mv ${TMP_DIR}/tmp4 $seqfile.excluding

rm -rf ${TMP_DIR}
